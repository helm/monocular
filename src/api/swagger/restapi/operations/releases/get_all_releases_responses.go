package releases

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/helm/monocular/src/api/swagger/models"
)

/*GetAllReleasesOK Get a list of releases

swagger:response getAllReleasesOK
*/
type GetAllReleasesOK struct {

	// In: body
	Payload *models.ResourceArrayData `json:"body,omitempty"`
}

// NewGetAllReleasesOK creates GetAllReleasesOK with default headers values
func NewGetAllReleasesOK() *GetAllReleasesOK {
	return &GetAllReleasesOK{}
}

// WithPayload adds the payload to the get all releases o k response
func (o *GetAllReleasesOK) WithPayload(payload *models.ResourceArrayData) *GetAllReleasesOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get all releases o k response
func (o *GetAllReleasesOK) SetPayload(payload *models.ResourceArrayData) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAllReleasesOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*GetAllReleasesDefault unexpected error

swagger:response getAllReleasesDefault
*/
type GetAllReleasesDefault struct {
	_statusCode int

	// In: body
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetAllReleasesDefault creates GetAllReleasesDefault with default headers values
func NewGetAllReleasesDefault(code int) *GetAllReleasesDefault {
	if code <= 0 {
		code = 500
	}

	return &GetAllReleasesDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get all releases default response
func (o *GetAllReleasesDefault) WithStatusCode(code int) *GetAllReleasesDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get all releases default response
func (o *GetAllReleasesDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get all releases default response
func (o *GetAllReleasesDefault) WithPayload(payload *models.Error) *GetAllReleasesDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get all releases default response
func (o *GetAllReleasesDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAllReleasesDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
