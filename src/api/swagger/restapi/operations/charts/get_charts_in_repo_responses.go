package charts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/helm/monocular/src/api/swagger/models"
)

/*GetChartsInRepoOK charts by repo response

swagger:response getChartsInRepoOK
*/
type GetChartsInRepoOK struct {

	// In: body
	Payload GetChartsInRepoOKBodyBody `json:"body,omitempty"`
}

// NewGetChartsInRepoOK creates GetChartsInRepoOK with default headers values
func NewGetChartsInRepoOK() *GetChartsInRepoOK {
	return &GetChartsInRepoOK{}
}

// WithPayload adds the payload to the get charts in repo o k response
func (o *GetChartsInRepoOK) WithPayload(payload GetChartsInRepoOKBodyBody) *GetChartsInRepoOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get charts in repo o k response
func (o *GetChartsInRepoOK) SetPayload(payload GetChartsInRepoOKBodyBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetChartsInRepoOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if err := producer.Produce(rw, o.Payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

/*GetChartsInRepoDefault unexpected error

swagger:response getChartsInRepoDefault
*/
type GetChartsInRepoDefault struct {
	_statusCode int

	// In: body
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetChartsInRepoDefault creates GetChartsInRepoDefault with default headers values
func NewGetChartsInRepoDefault(code int) *GetChartsInRepoDefault {
	if code <= 0 {
		code = 500
	}

	return &GetChartsInRepoDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get charts in repo default response
func (o *GetChartsInRepoDefault) WithStatusCode(code int) *GetChartsInRepoDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get charts in repo default response
func (o *GetChartsInRepoDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get charts in repo default response
func (o *GetChartsInRepoDefault) WithPayload(payload *models.Error) *GetChartsInRepoDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get charts in repo default response
func (o *GetChartsInRepoDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetChartsInRepoDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
