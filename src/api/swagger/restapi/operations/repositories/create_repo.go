package repositories

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// CreateRepoHandlerFunc turns a function with the right signature into a create repo handler
type CreateRepoHandlerFunc func(CreateRepoParams) middleware.Responder

// Handle executing the request and returning a response
func (fn CreateRepoHandlerFunc) Handle(params CreateRepoParams) middleware.Responder {
	return fn(params)
}

// CreateRepoHandler interface for that can handle valid create repo params
type CreateRepoHandler interface {
	Handle(CreateRepoParams) middleware.Responder
}

// NewCreateRepo creates a new http.Handler for the create repo operation
func NewCreateRepo(ctx *middleware.Context, handler CreateRepoHandler) *CreateRepo {
	return &CreateRepo{Context: ctx, Handler: handler}
}

/*CreateRepo swagger:route POST /v1/repos repositories createRepo

add a repository to be indexed

*/
type CreateRepo struct {
	Context *middleware.Context
	Handler CreateRepoHandler
}

func (o *CreateRepo) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewCreateRepoParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
