package repositories

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/helm/monocular/src/api/swagger/models"
)

/*GetAllReposOK repositories response

swagger:response getAllReposOK
*/
type GetAllReposOK struct {

	// In: body
	Payload *models.ResourceArrayData `json:"body,omitempty"`
}

// NewGetAllReposOK creates GetAllReposOK with default headers values
func NewGetAllReposOK() *GetAllReposOK {
	return &GetAllReposOK{}
}

// WithPayload adds the payload to the get all repos o k response
func (o *GetAllReposOK) WithPayload(payload *models.ResourceArrayData) *GetAllReposOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get all repos o k response
func (o *GetAllReposOK) SetPayload(payload *models.ResourceArrayData) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAllReposOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*GetAllReposDefault unexpected error

swagger:response getAllReposDefault
*/
type GetAllReposDefault struct {
	_statusCode int

	// In: body
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetAllReposDefault creates GetAllReposDefault with default headers values
func NewGetAllReposDefault(code int) *GetAllReposDefault {
	if code <= 0 {
		code = 500
	}

	return &GetAllReposDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get all repos default response
func (o *GetAllReposDefault) WithStatusCode(code int) *GetAllReposDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get all repos default response
func (o *GetAllReposDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get all repos default response
func (o *GetAllReposDefault) WithPayload(payload *models.Error) *GetAllReposDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get all repos default response
func (o *GetAllReposDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAllReposDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
