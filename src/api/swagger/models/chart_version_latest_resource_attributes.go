package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

/*ChartVersionLatestResourceAttributes chart version latest resource attributes

swagger:model chartVersionLatestResourceAttributes
*/
type ChartVersionLatestResourceAttributes struct {

	/* created

	Required: true
	Min Length: 1
	*/
	Created *string `json:"created"`

	/* digest

	Required: true
	Min Length: 1
	*/
	Digest *string `json:"digest"`

	/* urls

	Required: true
	*/
	Urls []string `json:"urls"`

	/* version

	Required: true
	Min Length: 1
	*/
	Version *string `json:"version"`
}

// Validate validates this chart version latest resource attributes
func (m *ChartVersionLatestResourceAttributes) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCreated(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateDigest(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateUrls(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateVersion(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ChartVersionLatestResourceAttributes) validateCreated(formats strfmt.Registry) error {

	if err := validate.Required("created", "body", m.Created); err != nil {
		return err
	}

	if err := validate.MinLength("created", "body", string(*m.Created), 1); err != nil {
		return err
	}

	return nil
}

func (m *ChartVersionLatestResourceAttributes) validateDigest(formats strfmt.Registry) error {

	if err := validate.Required("digest", "body", m.Digest); err != nil {
		return err
	}

	if err := validate.MinLength("digest", "body", string(*m.Digest), 1); err != nil {
		return err
	}

	return nil
}

func (m *ChartVersionLatestResourceAttributes) validateUrls(formats strfmt.Registry) error {

	if err := validate.Required("urls", "body", m.Urls); err != nil {
		return err
	}

	return nil
}

func (m *ChartVersionLatestResourceAttributes) validateVersion(formats strfmt.Registry) error {

	if err := validate.Required("version", "body", m.Version); err != nil {
		return err
	}

	if err := validate.MinLength("version", "body", string(*m.Version), 1); err != nil {
		return err
	}

	return nil
}
